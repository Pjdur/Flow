name: Build and Release for Windows

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: rustup update stable && rustup target add x86_64-pc-windows-msvc

      - name: Build project
        run: cargo build --release --target=x86_64-pc-windows-msvc

      - name: Organize build artifacts
        run: |
          mkdir builds\windows
          copy target\x86_64-pc-windows-msvc\release\* builds\windows\

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: builds\windows\

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Release Notes with Release Drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Tag from Release Drafter
        id: tag
        run: |
          TAG_NAME=$(gh release view --json tagName --jq .tagName || echo "v0.1.0")
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Tag to GitHub
        run: |
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: builds/windows/*
          body: |
            ðŸš€ New release generated from GitHub Actions!
            **Platform included:**  
            - ðŸªŸ Windows (`builds/windows/`).